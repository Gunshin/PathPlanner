correct node implementation

JPS:
need to improve heuristic based on direction we are expanding so that nodes expanding in the correct direction will be expanded first.

GraphGridMapMinimalist:
decide on full implementation. currently does not inherit from IGraphStructure

original running time release:
	3.681081611e-005

need to change forced neighbour checks to behind rather than current in front

open list:
	minimalist_node

graphs:
	searched - GraphGridMapMinimalist
	parent - xy
	traversable - GraphGridMapMinimalist
	pathcost - float
	g - float

xy:
	x - float
	y - float

minimalist_node:
	position
	priority

	xy

	
	
Notes

attempted to modify the jpso algorithm to allow for more efficiency

first attempt was based on storing directions/neighbours of jump points. works, but i have to check the pathcost of every node i explore

second attempt was to modify the heuristic to allow nodes/directions facing the goal to be explored first as an attempt to further reduce exploration cost. did not work as suboptimal paths can be produced.

third attempt is to only add the neighbours in the direction of travel when a jump point has been found. sounds pretty reasonable, have not finished.